{"version":3,"file":"static/js/357.df6f2fff.chunk.js","mappings":"mPAoDA,UA9CgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAkBC,EAAAA,EAAAA,UACtB,qDAAM,WAAMN,GAAN,gGAEoBO,EAAAA,GAAoBP,GAFxC,UAEIG,EAFJ,wDAQAC,EAAWD,GARX,yDAWFK,EAAAA,GAAAA,MAAA,MAXE,0DAAN,wDAcA,IAOF,OALAC,EAAAA,EAAAA,YAAU,WAERJ,EAAgBK,OAAOV,GACxB,GAAE,CAACK,EAAiBL,IAEhBG,GAA8B,IAAnBA,EAAQQ,QAIpB,SAAC,IAAD,CAAKC,EAAG,EAAGC,UAAU,kBAArB,UACE,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,0BACGA,EAAOC,eAAeC,MACrB,oCAAYF,EAAOC,eAAeC,SAElC,oCAAYF,EAAOC,eAAeE,aAEpC,uBAAIH,EAAOI,YANJJ,EAAOf,GADC,SALlB,uDAkBV,C,4MCjDDoB,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAGlBA,EAASC,KAAKC,SAHI,2CAAH,qDAMXC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADjC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfI,EAAa,mCAAG,WAAMD,GAAN,uFACJP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFZ,cACrBE,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAObnB,EAAe,mCAAG,WAAMsB,GAAN,uFACNP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFV,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,+BACGC,EADH,kBACmBS,IAFZ,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["components/Reviews.js","services/api.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from 'services/api';\nimport { Box } from './Box';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n  //   const location = useLocation();\n  const getMovieReviews = useMemo(\n    () => async id => {\n      try {\n        const reviews = await API.getMovieReviews(id);\n\n        if (!reviews) {\n          return;\n        } else {\n          // console.log(reviews.cast);\n          setReviews(reviews);\n        }\n      } catch (error) {\n        toast.error(error);\n      }\n    },\n    []\n  );\n  useEffect(() => {\n    // console.log(`рендер`);\n    getMovieReviews(Number(id));\n  }, [getMovieReviews, id]);\n\n  if (!reviews || reviews.length === 0)\n    return <p>No information about reviews</p>;\n  else\n    return (\n      <Box p={4} borderTop=\"1px solid black\">\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              {review.author_details.name ? (\n                <b>Author: {review.author_details.name}</b>\n              ) : (\n                <b>Author: {review.author_details.username}</b>\n              )}\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      </Box>\n    );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MY_API = 'a394f032d9659e3b1c5d6c8016e34e75';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_API}`);\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${MY_API}`);\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieCasts = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_API}`\n  );\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_API}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_API}&query=${query}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n"],"names":["id","useParams","useState","reviews","setReviews","getMovieReviews","useMemo","API","toast","useEffect","Number","length","p","borderTop","map","review","author_details","name","username","content","axios","MY_API","getTrending","response","data","results","getMovieDetails","movieId","getMovieCasts","getMoviesByQuery","query"],"sourceRoot":""}
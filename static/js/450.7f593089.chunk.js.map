{"version":3,"file":"static/js/450.7f593089.chunk.js","mappings":"uQAgFA,UAnEqB,WAAO,IAAD,QACjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,UACtB,qDAAM,WAAMR,GAAN,gGAEkBS,EAAAA,GAAoBT,GAFtC,UAEIG,EAFJ,wDAQAC,EAASD,GART,yDAWFO,EAAAA,GAAAA,MAAA,MAXE,0DAAN,wDAcA,IAQF,IANAC,EAAAA,EAAAA,YAAU,WAERJ,EAAgBK,OAAOZ,GACxB,GAAE,CAACO,EAAiBP,IAGhBG,EAEL,OACE,iCACE,SAAC,KAAD,CAAMU,GAAE,oBAAER,EAASS,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,QAAlC,+BACA,UAAC,IAAD,CAAKC,EAAG,EAAGC,QAAQ,OAAOC,aAAa,kBAAvC,WACE,gBACEC,IAAG,yCAAoChB,EAAMiB,aAC7CC,IAAI,MAEN,UAAC,IAAD,CAAKL,EAAG,EAAR,WACE,wBAAKb,EAAMmB,QACVnB,EAAMoB,UAAW,8BAAMpB,EAAMoB,QAAZ,QAElB,wCAAgBC,KAAKC,MAA2B,IAArBtB,EAAMuB,cAAsB,GAAvD,QACA,qCACA,uBAAIvB,EAAMwB,YACV,mCACA,uBACGxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OACrB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAM9B,GADI,aAM7B,UAAC,IAAD,CAAKgB,EAAG,EAAGC,QAAQ,OAAOe,cAAc,SAAxC,WACE,SAAC,KAAD,CAASnB,GAAI,OAAQC,MAAO,CAAEC,KAAI,UAAEV,EAASS,aAAX,aAAE,EAAgBC,MAApD,mBAGA,SAAC,KAAD,CAASF,GAAI,UAAWC,MAAO,CAAEC,KAAI,UAAEV,EAASS,aAAX,aAAE,EAAgBC,MAAvD,yBAIF,SAAC,EAAAkB,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,4MC7EDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAGlBA,EAASC,KAAKC,SAHI,2CAAH,qDAMXjC,EAAe,mCAAG,WAAMkC,GAAN,uFACNN,IAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IADjC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfG,EAAa,mCAAG,WAAMD,GAAN,uFACJN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,IAFZ,cACrBE,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAObI,EAAe,mCAAG,WAAMF,GAAN,uFACNN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,IAFV,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,+BACGC,EADH,kBACmBS,IAFZ,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["pages/MoiveDetails.js","services/api.js"],"sourcesContent":["import { Box } from 'components/Box';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useEffect, useMemo, useState } from 'react';\nimport {\n  useParams,\n  useLocation,\n  Outlet,\n  NavLink,\n  Link,\n} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../services/api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  // console.log(location.state);\n  const getMovieDetails = useMemo(\n    () => async id => {\n      try {\n        const movie = await API.getMovieDetails(id);\n\n        if (!movie) {\n          return;\n        } else {\n          // console.log(movie);\n          setMovie(movie);\n        }\n      } catch (error) {\n        toast.error(error);\n      }\n    },\n    []\n  );\n  useEffect(() => {\n    // console.log('рендер');\n    getMovieDetails(Number(id));\n  }, [getMovieDetails, id]);\n  //   console.log(movie);\n\n  if (!movie) return;\n  //   console.log(movie);\n  return (\n    <>\n      <Link to={location.state?.from ?? '/home'}>Back to the list</Link>\n      <Box p={4} display=\"flex\" borderBottom=\"1px solid black\">\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt=\"\"\n        />\n        <Box p={4}>\n          <h2>{movie.title}</h2>\n          {movie.tagline && <h3>({movie.tagline})</h3>}\n\n          <p>User score: {Math.round(movie.vote_average * 100) / 10}%</p>\n          <b>Overview</b>\n          <p>{movie.overview}</p>\n          <b>Genres</b>\n          <p>\n            {movie.genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </p>\n        </Box>\n      </Box>\n      <Box p={4} display=\"flex\" flexDirection=\"column\">\n        <NavLink to={'cast'} state={{ from: location.state?.from }}>\n          Cast\n        </NavLink>\n        <NavLink to={'reviews'} state={{ from: location.state?.from }}>\n          Reviews\n        </NavLink>\n      </Box>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MY_API = 'a394f032d9659e3b1c5d6c8016e34e75';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_API}`);\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${MY_API}`);\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieCasts = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_API}`\n  );\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_API}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_API}&query=${query}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n"],"names":["id","useParams","useState","movie","setMovie","location","useLocation","getMovieDetails","useMemo","API","toast","useEffect","Number","to","state","from","p","display","borderBottom","src","poster_path","alt","title","tagline","Math","round","vote_average","overview","genres","map","genre","name","flexDirection","Suspense","fallback","axios","MY_API","getTrending","response","data","results","movieId","getMovieCasts","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}
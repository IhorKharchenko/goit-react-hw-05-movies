{"version":3,"file":"static/js/948.1fa21f3f.chunk.js","mappings":"yTAEaA,EAAaC,EAAAA,EAAAA,GAAH,8GAMVC,EAAiBD,EAAAA,EAAAA,GAAH,wNASdE,EAAYF,EAAAA,EAAAA,IAAH,gEAITG,EAAiBH,EAAAA,EAAAA,EAAH,8D,SCsC3B,EA9Cc,WACZ,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAgBC,EAAAA,EAAAA,UACpB,qDAAM,WAAMN,GAAN,gGAEkBO,EAAAA,GAAkBP,GAFpC,UAEIG,EAFJ,wDAOAC,EAASD,EAAMK,MAPf,yDAUFC,EAAAA,GAAAA,MAAA,MAVE,0DAAN,wDAaA,IAOF,OALAC,EAAAA,EAAAA,YAAU,WACRL,EAAcM,OAAOX,GAEtB,GAAE,CAACK,EAAeL,IAEdG,GAA0B,IAAjBA,EAAMS,QAGlB,SAACC,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,kBAArB,UACE,SAACpB,EAAD,UACGQ,EAAMa,KAAI,SAAAR,GAAI,OACb,UAACX,EAAD,YACE,SAACE,EAAD,UAAiBS,EAAKS,OACrBT,EAAKU,cACJ,SAACpB,EAAD,CACEqB,IAAG,6CAAwCX,EAAKU,cAChDE,IAAG,6BAAwBZ,EAAKS,KAA7B,eAGL,+CAAuBT,EAAKS,KAA5B,gBARiBT,EAAKR,GADb,SALoB,SAACqB,EAAA,QAAD,CAAWC,QAAQ,GAqB7D,C,qICvDYC,GAAW3B,EAAAA,EAAAA,GAAOiB,EAAAA,EAAPjB,CAAH,6LAGD4B,G,SCapB,EAdkB,SAAC,GAAuB,IAAD,QAApBF,OAAAA,OAAoB,SACjCG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGD,IACC,SAACK,EAAA,EAAD,CACEC,WAAU,oBAAEH,EAASI,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,QACpCC,KAAK,kBAKd,C,0FCfYC,GAAapC,EAAAA,EAAAA,GAAOqC,EAAAA,GAAPrC,CAAH,yT,mBCAV+B,EAAe,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,WAAYG,EAAW,EAAXA,KACzC,OACE,UAACC,EAAD,CAAYE,GAAIN,EAAhB,WACE,SAAC,MAAD,IACCG,IAGN,C,4MCRDI,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAGlBA,EAASC,KAAKC,SAHI,2CAAH,qDAMXC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADjC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKflC,EAAa,mCAAG,WAAMqC,GAAN,uFACJP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFZ,cACrBE,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAObI,EAAe,mCAAG,WAAMD,GAAN,uFACNP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFV,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,+BACGC,EADH,kBACmBS,IAFZ,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["components/Casts/Casts.styled.js","components/Casts/Casts.js","components/ErrorPage/ErrorPage.styled.js","components/ErrorPage/ErrorPage.js","components/ReturnButton/ReturnButton.styled.js","components/ReturnButton/ReturnButton.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  display: inline-flex;\n  justify-content: start;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\nexport const StyledListItem = styled.li`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: calc((100% - 90px) / 10);\n  border: 1px solid #07c;\n  border-radius: 8px;\n`;\nexport const StyledImg = styled.img`\n  font-size: 15px;\n  max-width: 100%;\n`;\nexport const StyledCastName = styled.p`\n  padding: 4px;\n  font-weight: 500;\n`;\n","import ErrorPage from 'components/ErrorPage/ErrorPage';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../../services/api';\nimport { Box } from '../Box';\nimport {\n  StyledCastName,\n  StyledImg,\n  StyledList,\n  StyledListItem,\n} from './Casts.styled';\n\nconst Casts = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  const getMovieCasts = useMemo(\n    () => async id => {\n      try {\n        const casts = await API.getMovieCasts(id);\n\n        if (!casts) {\n          return;\n        } else {\n          setCasts(casts.cast);\n        }\n      } catch (error) {\n        toast.error(error);\n      }\n    },\n    []\n  );\n  useEffect(() => {\n    getMovieCasts(Number(id));\n    return;\n  }, [getMovieCasts, id]);\n\n  if (!casts || casts.length === 0) return <ErrorPage rtnBtn={false} />;\n\n  return (\n    <Box p={4} borderTop=\"1px solid black\">\n      <StyledList>\n        {casts.map(cast => (\n          <StyledListItem key={cast.id}>\n            <StyledCastName>{cast.name}</StyledCastName>\n            {cast.profile_path ? (\n              <StyledImg\n                src={`https://image.tmdb.org/t/p/original${cast.profile_path}`}\n                alt={`Here should be the ${cast.name}'s photo`}\n              />\n            ) : (\n              <p>Here should be the {cast.name}'s photo</p>\n            )}\n          </StyledListItem>\n        ))}\n      </StyledList>\n    </Box>\n  );\n};\nexport default Casts;\n","import styled from '@emotion/styled';\nimport { Box } from 'components/Box';\nimport imagePath from '../../images/pageNotFound.jpg';\nexport const ErrorBox = styled(Box)`\n  /* text-align: center; */\n  height: 100vh;\n  background: url(${imagePath});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n","// import { Box } from '../Box';\nimport { ReturnButton } from 'components/ReturnButton/ReturnButton';\nimport { useLocation } from 'react-router-dom';\nimport { ErrorBox } from './ErrorPage.styled';\n\nconst ErrorPage = ({ rtnBtn = true }) => {\n  const location = useLocation();\n\n  return (\n    <ErrorBox>\n      {rtnBtn && (\n        <ReturnButton\n          returnPath={location.state?.from ?? '/home'}\n          text=\"Back to main\"\n        />\n      )}\n    </ErrorBox>\n  );\n};\nexport default ErrorPage;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const RtnBtnLink = styled(Link)`\n  align-items: center;\n  display: inline-flex;\n  margin-top: 8px;\n  /* margin: 0; */\n  padding: 8px;\n  gap: 8px;\n  border: 1px solid #07c;\n  border-radius: 8px;\n  color: #1f2e40;\n  &:hover,\n  :focus {\n    background-color: #07c;\n    border-color: #05a;\n    color: #fff;\n  }\n`;\n","import { RtnBtnLink } from './ReturnButton.styled';\nimport { VscDebugStepBack } from 'react-icons/vsc';\n\nexport const ReturnButton = ({ returnPath, text }) => {\n  return (\n    <RtnBtnLink to={returnPath}>\n      <VscDebugStepBack />\n      {text}\n    </RtnBtnLink>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MY_API = 'a394f032d9659e3b1c5d6c8016e34e75';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_API}`);\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${MY_API}`);\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieCasts = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_API}`\n  );\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_API}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_API}&query=${query}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n"],"names":["StyledList","styled","StyledListItem","StyledImg","StyledCastName","id","useParams","useState","casts","setCasts","getMovieCasts","useMemo","API","cast","toast","useEffect","Number","length","Box","p","borderTop","map","name","profile_path","src","alt","ErrorPage","rtnBtn","ErrorBox","imagePath","location","useLocation","ReturnButton","returnPath","state","from","text","RtnBtnLink","Link","to","axios","MY_API","getTrending","response","data","results","getMovieDetails","movieId","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}
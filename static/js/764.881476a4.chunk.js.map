{"version":3,"file":"static/js/764.881476a4.chunk.js","mappings":"6MAEaA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAe,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAASF,EAAIG,cAAcC,MAAMC,MACjB,KAAlBH,EAAOI,QAIXR,EAASI,GACTF,EAAIG,cAAcI,SAJhBC,EAAAA,GAAAA,MAAY,yBAKf,EACD,OACE,kBAAMV,SAAU,SAAAW,GAAC,OAAIV,EAAaU,EAAjB,EAAjB,WACE,kBACEC,KAAK,OACLC,KAAK,QACLd,SAAU,SAAAY,GAAC,OAAIZ,EAASY,EAAEN,cAAcE,MAA7B,KAEb,mBAAQK,KAAK,SAAb,sBAGL,C,iKChBOd,EAAcgB,EAAQ,MAAtBhB,UAoDR,UAlDe,WAAO,IAAD,EACnB,GAA4BiB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXlB,EAAK,UAAGe,EAAaI,IAAI,gBAApB,QAAgC,IAI3CC,EAAAA,EAAAA,YAAU,WACM,KAAVpB,GAAcqB,EAAarB,EAEhC,GAAE,IAEH,IAAMqB,EAAY,mCAAG,WAAMrB,GAAN,8EACnBW,EAAU,MACVE,GAAa,GAFM,kBAIIS,EAAAA,GAAqBtB,GAJzB,UAKK,KADhBU,EAJW,QAKNa,OALM,wBAMfnB,EAAAA,GAAAA,MAAA,4BAAiCJ,EAAjC,YACAa,GAAa,GAPE,2BASVF,GAAU,OAAID,IATJ,QAUjBG,GAAa,GAVI,4GAAH,sDAelB,OACE,UAAC,IAAD,CAAKW,EAAG,EAAR,WACE,SAAChC,EAAD,CAAWC,SAzBK,SAAAQ,GAClBe,EAAgBf,EAAQ,CAAED,MAAOC,GAAU,CAAC,EAC7C,EAuBqCP,SAAU2B,IAC3CT,IAAa,SAAC,IAAD,IACbF,IACC,wBACGA,EAAOe,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,oCAA+BD,EAAME,IACvCC,MAAO,CAAEC,KAAMb,GAFjB,SAIGS,EAAMK,SALFL,EAAME,GADA,QAc1B,C,4MCxDDI,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAGlBA,EAASC,KAAKC,SAHI,2CAAH,qDAMXC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADjC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfI,EAAa,mCAAG,WAAMD,GAAN,uFACJP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFZ,cACrBE,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAObK,EAAe,mCAAG,WAAMF,GAAN,uFACNP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFV,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAOfK,EAAgB,mCAAG,WAAM1C,GAAN,uFACPgC,IAAAA,IAAA,+BACGC,EADH,kBACmBjC,IAFZ,cACxBmC,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["components/SearchBox.js","pages/Movies.js","services/api.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const SearchBox = ({ onChange, onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const search = evt.currentTarget.query.value;\n    if (search.trim() === '') {\n      toast.error('Please enter the query');\n      return;\n    }\n    onSubmit(search);\n    evt.currentTarget.reset();\n  };\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        onChange={e => onChange(e.currentTarget.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { Box } from 'components/Box';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../services/api';\n\nconst { SearchBox } = require('components/SearchBox');\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n  const changeQuery = value => {\n    setSearchParams(value ? { query: value } : {});\n  };\n  useEffect(() => {\n    if (query !== '') submitSearch(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const submitSearch = async query => {\n    setMovies(null);\n    setIsLoading(true);\n    try {\n      const movies = await API.getMoviesByQuery(query);\n      if (movies.length === 0) {\n        toast.error(`We dont have any '${query}' movie`);\n        setIsLoading(false);\n        return;\n      } else setMovies([...movies]);\n      setIsLoading(false);\n    } catch (error) {}\n  };\n\n  //   console.log(movies);\n  return (\n    <Box p={4}>\n      <SearchBox onChange={changeQuery} onSubmit={submitSearch} />\n      {isLoading && <Loader />}\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`/movies/get-movie-details/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Box>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MY_API = 'a394f032d9659e3b1c5d6c8016e34e75';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_API}`);\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${MY_API}`);\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieCasts = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_API}`\n  );\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_API}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_API}&query=${query}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const deleteMaterial = async id => {\n  const response = await axios.delete(`/materials/${id}`);\n  return response.data;\n};\n\nexport const updateMaterial = async fields => {\n  const response = await axios.put(`/materials/${fields.id}`, fields);\n  return response.data;\n};\n"],"names":["SearchBox","onChange","onSubmit","handleSubmit","evt","preventDefault","search","currentTarget","query","value","trim","reset","toast","e","type","name","require","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","get","useEffect","submitSearch","API","length","p","map","movie","to","id","state","from","title","axios","MY_API","getTrending","response","data","results","getMovieDetails","movieId","getMovieCasts","getMovieReviews","getMoviesByQuery"],"sourceRoot":""}
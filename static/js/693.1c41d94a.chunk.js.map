{"version":3,"file":"static/js/693.1c41d94a.chunk.js","mappings":"mPAqDA,UA/Cc,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAgBC,EAAAA,EAAAA,UACpB,qDAAM,WAAMN,GAAN,gGAEkBO,EAAAA,GAAkBP,GAFpC,UAEIG,EAFJ,wDAQAC,EAASD,EAAMK,MARf,yDAWFC,EAAAA,GAAAA,MAAA,MAXE,0DAAN,wDAcA,IASF,OAPAC,EAAAA,EAAAA,YAAU,WAERL,EAAcM,OAAOX,GACtB,GAAE,CAACK,EAAeL,IAIdG,GAA0B,IAAjBA,EAAMS,QAElB,SAAC,IAAD,CAAKC,EAAG,EAAGC,UAAU,kBAArB,UACE,wBACGX,EAAMY,KAAI,SAAAP,GAAI,OACb,2BACE,uBAAIA,EAAKQ,OACRR,EAAKS,eACJ,gBACEC,IAAG,6CAAwCV,EAAKS,cAChDE,IAAI,GACJC,MAAM,WANHZ,EAAKR,GADD,SAJoB,qDAmB1C,C,4MClDDqB,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAGlBA,EAASC,KAAKC,SAHI,2CAAH,qDAMXC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADjC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfpB,EAAa,mCAAG,WAAMuB,GAAN,uFACJP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFZ,cACrBE,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAObI,EAAe,mCAAG,WAAMD,GAAN,uFACNP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFV,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,+BACGC,EADH,kBACmBS,IAFZ,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["components/Casts.js","services/api.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../services/api';\nimport { Box } from './Box';\n\nconst Casts = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  const getMovieCasts = useMemo(\n    () => async id => {\n      try {\n        const casts = await API.getMovieCasts(id);\n\n        if (!casts) {\n          return;\n        } else {\n          // console.log(casts.cast);\n          setCasts(casts.cast);\n        }\n      } catch (error) {\n        toast.error(error);\n      }\n    },\n    []\n  );\n  useEffect(() => {\n    // console.log(id);\n    getMovieCasts(Number(id));\n  }, [getMovieCasts, id]);\n  //   console.log(movie);\n\n  //   console.log(casts);\n  if (!casts || casts.length === 0) return <p>No information about casts</p>;\n  return (\n    <Box p={4} borderTop=\"1px solid black\">\n      <ul>\n        {casts.map(cast => (\n          <li key={cast.id}>\n            <p>{cast.name}</p>\n            {cast.profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/original${cast.profile_path}`}\n                alt=\"\"\n                width=\"75px\"\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\nexport default Casts;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MY_API = 'a394f032d9659e3b1c5d6c8016e34e75';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_API}`);\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${MY_API}`);\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieCasts = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_API}`\n  );\n  // console.log(response.data);\n  return response.data;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_API}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_API}&query=${query}`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n"],"names":["id","useParams","useState","casts","setCasts","getMovieCasts","useMemo","API","cast","toast","useEffect","Number","length","p","borderTop","map","name","profile_path","src","alt","width","axios","MY_API","getTrending","response","data","results","getMovieDetails","movieId","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}